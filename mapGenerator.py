#A function that can acheive: One other ‘insight’ or analysis tool of your choiceimport matplotlib.pyplot as pltimport pandas as pdfrom mpl_toolkits.mplot3d import Axes3Dfrom sklearn.preprocessing import StandardScalerimport numpy as npdef mapGenerator(data, mapType, year):    limits = ((data['LONGITUDE'].min(), data['LONGITUDE'].max(), data['LATITUDE'].min(), data['LATITUDE'].max()))    imgMap = plt.imread('map.png')    data = data[[col for col in data]]    nRow, nCol = data.shape    if (mapType == 'SEVERITY'):        oLong = []        oLat = []        sLong = []        sLat = []        fLong = []        fLat = []        nLong = []        nLat = []        for index, row in data.iterrows():            if (row['ACCIDENT_DATE'].split('/')[2] == year):                if (row['SEVERITY'] == "Other injury accident"):                    oLong.append(row['LONGITUDE'])                    oLat.append(row['LATITUDE'])                elif (row['SEVERITY'] == "Serious injury accident"):                    sLong.append(row['LONGITUDE'])                    sLat.append(row['LATITUDE'])                elif (row['SEVERITY'] == "Fatal accident"):                    fLong.append(row['LONGITUDE'])                    fLat.append(row['LATITUDE'])                elif (row['SEVERITY'] == "Non injury accident"):                    nLong.append(row['LONGITUDE'])                    nLat.append(row['LATITUDE'])                    fig, ax = plt.subplots(figsize = (8,7))        ax.scatter(nLong, nLat, zorder=1, alpha= 0.3, label ='No Injury', c='#E7E393', s=5)        ax.scatter(oLong, oLat, zorder=1, alpha= 0.5, label ='Other Injury', c='#F4C95D', s=5)        ax.scatter(sLong, sLat, zorder=1, alpha= 0.7, label ='Serious Injury', c='#DD7230', s=5)        ax.scatter(fLong, fLat, zorder=1, alpha= 0.9, label ='Fatality', c='#AB2346', s=5)        title = 'Map of Victoria Crashes by Severity in '+year        ax.set_title(title)        ax.set_xlim(limits[0],limits[1])        ax.set_ylim(limits[2],limits[3])        ax.set_ylabel('Latitude')        ax.set_xlabel('Longitude')        ax.legend()        ax.imshow(imgMap, zorder=0, extent = limits, aspect= 'equal')    elif (mapType == 'ALCOHOL_RELATED'):        aLong = []        aLat = []        sLong = []        sLat = []        for index, row in data.iterrows():            if (row['ACCIDENT_DATE'].split('/')[2] == year):                if (row['ALCOHOL_RELATED'] == "Yes"):                    aLong.append(row['LONGITUDE'])                    aLat.append(row['LATITUDE'])                elif (row['ALCOHOL_RELATED'] == "No"):                    sLong.append(row['LONGITUDE'])                    sLat.append(row['LATITUDE'])                    fig, ax = plt.subplots(figsize = (8,7))        ax.scatter(sLong, sLat, zorder=1, alpha= 1, label ='No', c='#767481', s=2)        ax.scatter(aLong, aLat, zorder=1, alpha= 1, label ='Yes', c='#09090B', s=2)        title = 'Map of Victoria Crashes whether Alcohol Related in '+year        ax.set_title(title)        ax.set_xlim(limits[0],limits[1])        ax.set_ylim(limits[2],limits[3])        ax.set_ylabel('Latitude')        ax.set_xlabel('Longitude')        ax.legend()        ax.imshow(imgMap, zorder=0, extent = limits, aspect= 'equal')    elif (mapType == 'HIT_RUN_FLAG'):        yLong = []        yLat = []        nLong = []        nLat = []        for index, row in data.iterrows():            if (row['ACCIDENT_DATE'].split('/')[2] == year):                if (row['HIT_RUN_FLAG'] == "Yes"):                    yLong.append(row['LONGITUDE'])                    yLat.append(row['LATITUDE'])                elif (row['HIT_RUN_FLAG'] == "No"):                    nLong.append(row['LONGITUDE'])                    nLat.append(row['LATITUDE'])                    fig, ax = plt.subplots(figsize = (8,7))        ax.scatter(nLong, nLat, zorder=1, alpha= 1, label ='No', c='#767481', s=2)        ax.scatter(yLong, yLat, zorder=1, alpha= 1, label ='Yes', c='#09090B', s=2)        title = 'Map of Victoria Crashes Whether Hit and Run in '+year        ax.set_title(title)        ax.set_xlim(limits[0],limits[1])        ax.set_ylim(limits[2],limits[3])        ax.set_ylabel('Latitude')        ax.set_xlabel('Longitude')        ax.legend()        ax.imshow(imgMap, zorder=0, extent = limits, aspect= 'equal')